I"k&<p><a href="https://github.com/jeetmp3/spring-session" target="_blank"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/e7bbb0521b397edbd5fe43e7f760759336b5e05f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677265656e5f3030373230302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_green_007200.png" /></a></p>

<p>Hi Folks hope you’re doing well!</p>

<p>I was quit busy since my last blog post. So this post is part of <a href="/search/Spring-Session" target="_blank"><strong>Spring-Session Grails Plugin</strong></a> blog series which will cover JDBC as your datastore.</p>

<p>In this blog post I’ll explain how you can use JDBC as your session store. To use JDBC as your datastore you need to create two tables in your database. Spring Session doesn’t use any type of ORM tool. You’ll need to create two table one is for session and other for session attributes and the format will be like <strong>&lt;SESSION TABLE&gt;</strong> and <strong>&lt;SESSION TABLE&gt;_ATTRIBUTES</strong>”.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">SPRING_SESSION</span> <span class="p">(</span>
  <span class="n">SESSION_ID</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">36</span><span class="p">),</span>
  <span class="n">CREATION_TIME</span> <span class="nb">BIGINT</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="n">LAST_ACCESS_TIME</span> <span class="nb">BIGINT</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="n">MAX_INACTIVE_INTERVAL</span> <span class="nb">INT</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="n">PRINCIPAL_NAME</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">100</span><span class="p">),</span>
  <span class="k">CONSTRAINT</span> <span class="n">SPRING_SESSION_PK</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="n">SESSION_ID</span><span class="p">)</span>
<span class="p">);</span>

<span class="k">CREATE</span> <span class="k">INDEX</span> <span class="n">SPRING_SESSION_IX1</span> <span class="k">ON</span> <span class="n">SPRING_SESSION</span> <span class="p">(</span><span class="n">LAST_ACCESS_TIME</span><span class="p">);</span>

<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">SPRING_SESSION_ATTRIBUTES</span> <span class="p">(</span>
 <span class="n">SESSION_ID</span> <span class="nb">CHAR</span><span class="p">(</span><span class="mi">36</span><span class="p">),</span>
 <span class="n">ATTRIBUTE_NAME</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">200</span><span class="p">),</span>
 <span class="n">ATTRIBUTE_BYTES</span> <span class="n">BYTEA</span><span class="p">,</span>
 <span class="k">CONSTRAINT</span> <span class="n">SPRING_SESSION_ATTRIBUTES_PK</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="n">SESSION_ID</span><span class="p">,</span> <span class="n">ATTRIBUTE_NAME</span><span class="p">),</span>
 <span class="k">CONSTRAINT</span> <span class="n">SPRING_SESSION_ATTRIBUTES_FK</span> <span class="k">FOREIGN</span> <span class="k">KEY</span> <span class="p">(</span><span class="n">SESSION_ID</span><span class="p">)</span> <span class="k">REFERENCES</span> <span class="n">SPRING_SESSION</span><span class="p">(</span><span class="n">SESSION_ID</span><span class="p">)</span> <span class="k">ON</span> <span class="k">DELETE</span> <span class="k">CASCADE</span>
<span class="p">);</span>

<span class="k">CREATE</span> <span class="k">INDEX</span> <span class="n">SPRING_SESSION_ATTRIBUTES_IX1</span> <span class="k">ON</span> <span class="n">SPRING_SESSION_ATTRIBUTES</span> <span class="p">(</span><span class="n">SESSION_ID</span><span class="p">);</span>
</code></pre></div></div>
<p>To change datastore you need to add property in your <code class="highlighter-rouge">Config.groovy</code>.</p>

<div class="language-groovy highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">springsession</span><span class="o">.</span><span class="na">sessionStore</span><span class="o">=</span><span class="n">SessionStore</span><span class="o">.</span><span class="na">JDBC</span>
</code></pre></div></div>

<p>This will set JDBC as your datastore. By default it’ll try to connect <strong>H2 Database</strong>. Let’s checkout the some config properties with their default values.</p>

<p class="notice"><strong><em>Note:</em></strong> <em>Some of the common properties explained in part 1. Those will work same for jdbc datastore</em>.</p>

<div class="language-groovy highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">driverClassName</span><span class="o">=</span><span class="s2">"org.h2.Driver"</span> <span class="c1">// Driver class default is H2 driver</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">url</span><span class="o">=</span><span class="s2">"jdbc:h2:~/test"</span> <span class="c1">// JDBC Connection string</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">username</span><span class="o">=</span><span class="s2">""</span> <span class="c1">// JDBC username. Default is "".</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">password</span><span class="o">=</span><span class="s2">""</span> <span class="c1">// JDBC password. Default is "".</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">tableName</span><span class="o">=</span><span class="s2">"SessionData"</span> <span class="c1">// table name to store sessions</span>

<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">maxActive</span><span class="o">=</span><span class="mi">10</span> <span class="c1">// Connection pool max active</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">maxTotal</span><span class="o">=</span><span class="mi">20</span> <span class="c1">// Connection pool max total</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">minIdle</span><span class="o">=</span><span class="mi">3</span> <span class="c1">// Connection pool min idle</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">maxWaitMillis</span><span class="o">=</span><span class="mi">10000</span> <span class="c1">// Connection wait time</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">defaultAutoCommit</span><span class="o">=</span><span class="kc">true</span> <span class="c1">// autocommit true by default</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">defaultReadOnly</span><span class="o">=</span><span class="kc">false</span> <span class="c1">// read only sessions</span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">defaultTransactionIsolation</span><span class="o">=</span><span class="n">Connection</span><span class="o">.</span><span class="na">TRANSACTION_READ_COMMITTED</span> <span class="c1">// transaction isolation  </span>
<span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">pool</span><span class="o">.</span><span class="na">validationQuery</span><span class="o">=</span><span class="s2">"SELECT 1"</span> <span class="c1">// Validate connection query  </span>
</code></pre></div></div>

<p>By default it uses Java serialization. To use Json Serialization please visit to <a href="/blogs/2016/12/15/Spring-Session-Grails-Plugin"><strong>first blog</strong></a> of this series. First 2 steps will be same but in 3<sup>rd</sup> step <strong><em>Register my module class with spring-session plugin</em></strong> you will have to use jdbc specific <code class="highlighter-rouge">jackson.modules</code> property.</p>

<div class="language-groovy highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">springsession</span><span class="o">.</span><span class="na">jdbc</span><span class="o">.</span><span class="na">jackson</span><span class="o">.</span><span class="na">modules</span> <span class="o">=</span> <span class="o">[</span><span class="s1">'demo.SimpleModule'</span><span class="o">]</span>
</code></pre></div></div>
:ET